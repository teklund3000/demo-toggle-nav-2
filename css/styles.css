body {
    background-color: #192f5e;
    font-family: sans-serif;
}
.flex-container {
    display: flex;
    flex-flow: wrap;
    justify-content: space-between;
}

/* ***************** header & nav ************* */
/* Step 1. Style the nav for when it shows, starting with the mobile view, and then hide it */
header {
    background-color: #fff;
    padding: 1rem;
}


.toggle-btn {
    border: none;
    background-color: #fff;
}

.toggle-btn:hover {
    cursor: pointer;
}

nav {
    flex: 1 0 100%;
}

.menu a {
    color: #3f3f3f;
    text-decoration: none;
    /* allows the clickable area to take up the full width and height of the li */
    display: block;
}

.menu a:hover,
.menu a:active {
    background-color: gainsboro;
    border-radius: 4px;
}

.menu li {
    line-height: 40px;
    text-align: center;
    margin-bottom: 0.5rem;
}

header nav {
    /* add CSS here */
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.7s ease-in-out;
    position: absolute;
    top: 81px;
    left: 0;
    background-color: rgba(255, 255, 255, 0.95);
    width: 100vw;
    z-index: 1;
}

.show-nav {
    /* add CSS here */
    max-height: 18.75rem;
}

/* ************ section ************ */
section {
    padding: 3.125rem;
    text-align: center;
    text-transform: uppercase;
}

section p {
    color: #d5e294;
}

section h2 {
    color: #fff;
    font-size: 3.175rem;
    margin-bottom: 1.5rem;
}

.gallery {
    display:flex;
    flex-flow: wrap;
    justify-content: center;
    gap: 1rem;
}
.gallery > div {
    position: relative;
}

span {
    background-color: #87a6ab;
    color: #ffff;
    font-weight: bold;
    padding: 0.5rem 1rem;
    border-radius: 7px;
    position: absolute;
    top: -20px;
    right: -10px;
    /* once we add the span as a positioned element, the nav and span are overlapping  = we have to use z-index to name which element gets put on top. */

}


@media screen and (min-width: 625px) {
    .toggle-btn {
        display: none;
    }

    header {
        flex-flow: nowrap;
    }

    header nav {
        /* add CSS here */
        max-height: unset;
        flex: 0 1 auto;
        /* flex shorthand is very powerful: first (0) - do not grow beyond content width, second (1) - yes you can shrink, third (auto) - default width is content width */
        position: static;
        /* static is opposite of position:absolute (as coded above) */
        width: auto;
        /* width to overwrite the width:100vw (as coded above) */
    }

    ul.menu {
        display: flex;
        gap: 1rem;
    }

    ul.menu a {
        padding: 0 0.75rem;
    }
}

/* media query for fixed-width container that is 1100px wide */

@media screen and (min-width: 1100px) {
    .inner-container {
        width: 1100px;
        margin: 0 auto;
    }
}